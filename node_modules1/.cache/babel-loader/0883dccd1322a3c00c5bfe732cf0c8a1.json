{"remainingRequest":"G:\\实训一\\carPrice\\node_modules\\babel-loader\\lib\\index.js!G:\\实训一\\carPrice\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\实训一\\carPrice\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\实训一\\carPrice\\src\\components\\better-scroll\\bubble.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\实训一\\carPrice\\src\\components\\better-scroll\\bubble.vue","mtime":1576460955730},{"path":"G:\\实训一\\carPrice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\实训一\\carPrice\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\实训一\\carPrice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\实训一\\carPrice\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7Ci8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgeTogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB3aWR0aDogNTAsCiAgICAgIGhlaWdodDogODAKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgZGlzdGFuY2U6IGZ1bmN0aW9uIGRpc3RhbmNlKCkgewogICAgICByZXR1cm4gTWF0aC5tYXgoMCwgTWF0aC5taW4odGhpcy55ICogdGhpcy5yYXRpbywgdGhpcy5tYXhEaXN0YW5jZSkpOwogICAgfSwKICAgIHN0eWxlOiBmdW5jdGlvbiBzdHlsZSgpIHsKICAgICAgcmV0dXJuICJ3aWR0aDoiLmNvbmNhdCh0aGlzLndpZHRoIC8gdGhpcy5yYXRpbywgInB4O2hlaWdodDoiKS5jb25jYXQodGhpcy5oZWlnaHQgLyB0aGlzLnJhdGlvLCAicHgiKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnJhdGlvID0gd2luZG93LmRldmljZVBpeGVsUmF0aW87CiAgICB0aGlzLndpZHRoICo9IHRoaXMucmF0aW87CiAgICB0aGlzLmhlaWdodCAqPSB0aGlzLnJhdGlvOwogICAgdGhpcy5pbml0UmFkaXVzID0gMTggKiB0aGlzLnJhdGlvOwogICAgdGhpcy5taW5IZWFkUmFkaXVzID0gMTIgKiB0aGlzLnJhdGlvOwogICAgdGhpcy5taW5UYWlsUmFkaXVzID0gNSAqIHRoaXMucmF0aW87CiAgICB0aGlzLmluaXRBcnJvd1JhZGl1cyA9IDEwICogdGhpcy5yYXRpbzsKICAgIHRoaXMubWluQXJyb3dSYWRpdXMgPSA2ICogdGhpcy5yYXRpbzsKICAgIHRoaXMuYXJyb3dXaWR0aCA9IDMgKiB0aGlzLnJhdGlvOwogICAgdGhpcy5tYXhEaXN0YW5jZSA9IDQwICogdGhpcy5yYXRpbzsKICAgIHRoaXMuaW5pdENlbnRlclggPSAyNSAqIHRoaXMucmF0aW87CiAgICB0aGlzLmluaXRDZW50ZXJZID0gMjUgKiB0aGlzLnJhdGlvOwogICAgdGhpcy5oZWFkQ2VudGVyID0gewogICAgICB4OiB0aGlzLmluaXRDZW50ZXJYLAogICAgICB5OiB0aGlzLmluaXRDZW50ZXJZCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuX2RyYXcoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIF9kcmF3OiBmdW5jdGlvbiBfZHJhdygpIHsKICAgICAgdmFyIGJ1YmJsZSA9IHRoaXMuJHJlZnMuYnViYmxlOwogICAgICB2YXIgY3R4ID0gYnViYmxlLmdldENvbnRleHQoJzJkJyk7CiAgICAgIGN0eC5jbGVhclJlY3QoMCwgMCwgYnViYmxlLndpZHRoLCBidWJibGUuaGVpZ2h0KTsKCiAgICAgIHRoaXMuX2RyYXdCdWJibGUoY3R4KTsKCiAgICAgIHRoaXMuX2RyYXdBcnJvdyhjdHgpOwogICAgfSwKICAgIF9kcmF3QnViYmxlOiBmdW5jdGlvbiBfZHJhd0J1YmJsZShjdHgpIHsKICAgICAgY3R4LnNhdmUoKTsKICAgICAgY3R4LmJlZ2luUGF0aCgpOwogICAgICB2YXIgcmF0ZSA9IHRoaXMuZGlzdGFuY2UgLyB0aGlzLm1heERpc3RhbmNlOwogICAgICB2YXIgaGVhZFJhZGl1cyA9IHRoaXMuaW5pdFJhZGl1cyAtICh0aGlzLmluaXRSYWRpdXMgLSB0aGlzLm1pbkhlYWRSYWRpdXMpICogcmF0ZTsKICAgICAgdGhpcy5oZWFkQ2VudGVyLnkgPSB0aGlzLmluaXRDZW50ZXJZIC0gKHRoaXMuaW5pdFJhZGl1cyAtIHRoaXMubWluSGVhZFJhZGl1cykgKiByYXRlOyAvLyDnlLvkuIrljYrlvKfnur8KCiAgICAgIGN0eC5hcmModGhpcy5oZWFkQ2VudGVyLngsIHRoaXMuaGVhZENlbnRlci55LCBoZWFkUmFkaXVzLCAwLCBNYXRoLlBJLCB0cnVlKTsgLy8g55S75bem5L6n6LSd5aGe5bCUCgogICAgICB2YXIgdGFpbFJhZGl1cyA9IHRoaXMuaW5pdFJhZGl1cyAtICh0aGlzLmluaXRSYWRpdXMgLSB0aGlzLm1pblRhaWxSYWRpdXMpICogcmF0ZTsKICAgICAgdmFyIHRhaWxDZW50ZXIgPSB7CiAgICAgICAgeDogdGhpcy5oZWFkQ2VudGVyLngsCiAgICAgICAgeTogdGhpcy5oZWFkQ2VudGVyLnkgKyB0aGlzLmRpc3RhbmNlCiAgICAgIH07CiAgICAgIHZhciB0YWlsUG9pbnRMID0gewogICAgICAgIHg6IHRhaWxDZW50ZXIueCAtIHRhaWxSYWRpdXMsCiAgICAgICAgeTogdGFpbENlbnRlci55CiAgICAgIH07CiAgICAgIHZhciBjb250cm9sUG9pbnRMID0gewogICAgICAgIHg6IHRhaWxQb2ludEwueCwKICAgICAgICB5OiB0YWlsUG9pbnRMLnkgLSB0aGlzLmRpc3RhbmNlIC8gMgogICAgICB9OwogICAgICBjdHgucXVhZHJhdGljQ3VydmVUbyhjb250cm9sUG9pbnRMLngsIGNvbnRyb2xQb2ludEwueSwgdGFpbFBvaW50TC54LCB0YWlsUG9pbnRMLnkpOyAvLyDnlLvkuIvljYrlvKfnur8KCiAgICAgIGN0eC5hcmModGFpbENlbnRlci54LCB0YWlsQ2VudGVyLnksIHRhaWxSYWRpdXMsIE1hdGguUEksIDAsIHRydWUpOyAvLyDnlLvlj7PkvqfotJ3loZ7lsJQKCiAgICAgIHZhciBoZWFkUG9pbnRSID0gewogICAgICAgIHg6IHRoaXMuaGVhZENlbnRlci54ICsgaGVhZFJhZGl1cywKICAgICAgICB5OiB0aGlzLmhlYWRDZW50ZXIueQogICAgICB9OwogICAgICB2YXIgY29udHJvbFBvaW50UiA9IHsKICAgICAgICB4OiB0YWlsQ2VudGVyLnggKyB0YWlsUmFkaXVzLAogICAgICAgIHk6IGhlYWRQb2ludFIueSArIHRoaXMuZGlzdGFuY2UgLyAyCiAgICAgIH07CiAgICAgIGN0eC5xdWFkcmF0aWNDdXJ2ZVRvKGNvbnRyb2xQb2ludFIueCwgY29udHJvbFBvaW50Ui55LCBoZWFkUG9pbnRSLngsIGhlYWRQb2ludFIueSk7CiAgICAgIGN0eC5maWxsU3R5bGUgPSAncmdiKDE3MCwxNzAsMTcwKSc7CiAgICAgIGN0eC5maWxsKCk7CiAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICdyZ2IoMTUzLDE1MywxNTMpJzsKICAgICAgY3R4LnN0cm9rZSgpOwogICAgICBjdHgucmVzdG9yZSgpOwogICAgfSwKICAgIF9kcmF3QXJyb3c6IGZ1bmN0aW9uIF9kcmF3QXJyb3coY3R4KSB7CiAgICAgIGN0eC5zYXZlKCk7CiAgICAgIGN0eC5iZWdpblBhdGgoKTsKICAgICAgdmFyIHJhdGUgPSB0aGlzLmRpc3RhbmNlIC8gdGhpcy5tYXhEaXN0YW5jZTsKICAgICAgdmFyIGFycm93UmFkaXVzID0gdGhpcy5pbml0QXJyb3dSYWRpdXMgLSAodGhpcy5pbml0QXJyb3dSYWRpdXMgLSB0aGlzLm1pbkFycm93UmFkaXVzKSAqIHJhdGU7IC8vIOeUu+WGheWchgoKICAgICAgY3R4LmFyYyh0aGlzLmhlYWRDZW50ZXIueCwgdGhpcy5oZWFkQ2VudGVyLnksIGFycm93UmFkaXVzIC0gKHRoaXMuYXJyb3dXaWR0aCAtIHJhdGUpLCAtTWF0aC5QSSAvIDIsIDAsIHRydWUpOyAvLyDnlLvlpJblnIYKCiAgICAgIGN0eC5hcmModGhpcy5oZWFkQ2VudGVyLngsIHRoaXMuaGVhZENlbnRlci55LCBhcnJvd1JhZGl1cywgMCwgTWF0aC5QSSAqIDMgLyAyLCBmYWxzZSk7CiAgICAgIGN0eC5saW5lVG8odGhpcy5oZWFkQ2VudGVyLngsIHRoaXMuaGVhZENlbnRlci55IC0gYXJyb3dSYWRpdXMgLSB0aGlzLmFycm93V2lkdGggLyAyICsgcmF0ZSk7CiAgICAgIGN0eC5saW5lVG8odGhpcy5oZWFkQ2VudGVyLnggKyB0aGlzLmFycm93V2lkdGggKiAyIC0gcmF0ZSAqIDIsIHRoaXMuaGVhZENlbnRlci55IC0gYXJyb3dSYWRpdXMgKyB0aGlzLmFycm93V2lkdGggLyAyKTsKICAgICAgY3R4LmxpbmVUbyh0aGlzLmhlYWRDZW50ZXIueCwgdGhpcy5oZWFkQ2VudGVyLnkgLSBhcnJvd1JhZGl1cyArIHRoaXMuYXJyb3dXaWR0aCAqIDMgLyAyIC0gcmF0ZSk7CiAgICAgIGN0eC5maWxsU3R5bGUgPSAncmdiKDI1NSwyNTUsMjU1KSc7CiAgICAgIGN0eC5maWxsKCk7CiAgICAgIGN0eC5zdHJva2VTdHlsZSA9ICdyZ2IoMTcwLDE3MCwxNzApJzsKICAgICAgY3R4LnN0cm9rZSgpOwogICAgICBjdHgucmVzdG9yZSgpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHk6IGZ1bmN0aW9uIHkoKSB7CiAgICAgIHRoaXMuX2RyYXcoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["bubble.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <canvas ref=\"bubble\" :width=\"width\" :height=\"height\" :style=\"style\"></canvas>\r\n</template>\r\n\r\n<script type=\"text/ecmascript-6\">\r\n  export default {\r\n    props: {\r\n      y: {\r\n        type: Number,\r\n        default: 0\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        width: 50,\r\n        height: 80\r\n      }\r\n    },\r\n    computed: {\r\n      distance() {\r\n        return Math.max(0, Math.min(this.y * this.ratio, this.maxDistance))\r\n      },\r\n      style() {\r\n        return `width:${this.width / this.ratio}px;height:${this.height / this.ratio}px`\r\n      }\r\n    },\r\n    created() {\r\n      this.ratio = window.devicePixelRatio\r\n      this.width *= this.ratio\r\n      this.height *= this.ratio\r\n      this.initRadius = 18 * this.ratio\r\n      this.minHeadRadius = 12 * this.ratio\r\n      this.minTailRadius = 5 * this.ratio\r\n      this.initArrowRadius = 10 * this.ratio\r\n      this.minArrowRadius = 6 * this.ratio\r\n      this.arrowWidth = 3 * this.ratio\r\n      this.maxDistance = 40 * this.ratio\r\n      this.initCenterX = 25 * this.ratio\r\n      this.initCenterY = 25 * this.ratio\r\n      this.headCenter = {\r\n        x: this.initCenterX,\r\n        y: this.initCenterY\r\n      }\r\n    },\r\n    mounted() {\r\n      this._draw()\r\n    },\r\n    methods: {\r\n      _draw() {\r\n        const bubble = this.$refs.bubble\r\n        let ctx = bubble.getContext('2d')\r\n        ctx.clearRect(0, 0, bubble.width, bubble.height)\r\n        this._drawBubble(ctx)\r\n        this._drawArrow(ctx)\r\n      },\r\n      _drawBubble(ctx) {\r\n        ctx.save()\r\n        ctx.beginPath()\r\n        const rate = this.distance / this.maxDistance\r\n        const headRadius = this.initRadius - (this.initRadius - this.minHeadRadius) * rate\r\n        this.headCenter.y = this.initCenterY - (this.initRadius - this.minHeadRadius) * rate\r\n        // 画上半弧线\r\n        ctx.arc(this.headCenter.x, this.headCenter.y, headRadius, 0, Math.PI, true)\r\n        // 画左侧贝塞尔\r\n        const tailRadius = this.initRadius - (this.initRadius - this.minTailRadius) * rate\r\n        const tailCenter = {\r\n          x: this.headCenter.x,\r\n          y: this.headCenter.y + this.distance\r\n        }\r\n        const tailPointL = {\r\n          x: tailCenter.x - tailRadius,\r\n          y: tailCenter.y\r\n        }\r\n        const controlPointL = {\r\n          x: tailPointL.x,\r\n          y: tailPointL.y - this.distance / 2\r\n        }\r\n        ctx.quadraticCurveTo(controlPointL.x, controlPointL.y, tailPointL.x, tailPointL.y)\r\n        // 画下半弧线\r\n        ctx.arc(tailCenter.x, tailCenter.y, tailRadius, Math.PI, 0, true)\r\n        // 画右侧贝塞尔\r\n        const headPointR = {\r\n          x: this.headCenter.x + headRadius,\r\n          y: this.headCenter.y\r\n        }\r\n        const controlPointR = {\r\n          x: tailCenter.x + tailRadius,\r\n          y: headPointR.y + this.distance / 2\r\n        }\r\n        ctx.quadraticCurveTo(controlPointR.x, controlPointR.y, headPointR.x, headPointR.y)\r\n        ctx.fillStyle = 'rgb(170,170,170)'\r\n        ctx.fill()\r\n        ctx.strokeStyle = 'rgb(153,153,153)'\r\n        ctx.stroke()\r\n        ctx.restore()\r\n      },\r\n      _drawArrow(ctx) {\r\n        ctx.save()\r\n        ctx.beginPath()\r\n        const rate = this.distance / this.maxDistance\r\n        const arrowRadius = this.initArrowRadius - (this.initArrowRadius - this.minArrowRadius) * rate\r\n        // 画内圆\r\n        ctx.arc(this.headCenter.x, this.headCenter.y, arrowRadius - (this.arrowWidth - rate), -Math.PI / 2, 0, true)\r\n        // 画外圆\r\n        ctx.arc(this.headCenter.x, this.headCenter.y, arrowRadius, 0, Math.PI * 3 / 2, false)\r\n        ctx.lineTo(this.headCenter.x, this.headCenter.y - arrowRadius - this.arrowWidth / 2 + rate)\r\n        ctx.lineTo(this.headCenter.x + this.arrowWidth * 2 - rate * 2, this.headCenter.y - arrowRadius + this.arrowWidth / 2)\r\n        ctx.lineTo(this.headCenter.x, this.headCenter.y - arrowRadius + this.arrowWidth * 3 / 2 - rate)\r\n        ctx.fillStyle = 'rgb(255,255,255)'\r\n        ctx.fill()\r\n        ctx.strokeStyle = 'rgb(170,170,170)'\r\n        ctx.stroke()\r\n        ctx.restore()\r\n      }\r\n    },\r\n    watch: {\r\n      y() {\r\n        this._draw()\r\n      }\r\n    }\r\n  }\r\n</script>\r\n"],"sourceRoot":"src/components/better-scroll"}]}