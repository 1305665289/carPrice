{"remainingRequest":"G:\\实训一\\carPrice\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\实训一\\carPrice\\src\\components\\better-scroll\\scroll.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\实训一\\carPrice\\src\\components\\better-scroll\\scroll.vue","mtime":1576460955744},{"path":"G:\\实训一\\carPrice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\实训一\\carPrice\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\实训一\\carPrice\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"G:\\实训一\\carPrice\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\实训一\\carPrice\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}